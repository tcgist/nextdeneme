"use strict";(()=>{var e={};e.id=838,e.ids=[838],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},11565:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>A,requestAsyncStorage:()=>x,routeModule:()=>c,serverHooks:()=>w,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{POST:()=>m});var s=r(49303),n=r(88716),u=r(60670),i=r(87070),o=r(53524),p=r(42023),d=r.n(p);let l=new o.PrismaClient;async function m(e){if(await l.user.findFirst({where:{role:"ADMIN"}}))return new i.NextResponse("Admin zaten mevcut",{status:400});try{let e=await d().hash("admin123",10),t=await l.user.create({data:{name:"Admin",email:"admin@example.com",password:e,role:"ADMIN"}});return i.NextResponse.json({message:"Admin başarıyla oluşturuldu",email:t.email,password:"admin123"})}catch(e){return console.error(e),new i.NextResponse("Admin oluşturulurken bir hata oluştu",{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/setup/route",pathname:"/api/setup",filename:"route",bundlePath:"app/api/setup/route"},resolvedPagePath:"C:\\Users\\Serkan\\Desktop\\Cursor Deneme\\app\\api\\setup\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:x,staticGenerationAsyncStorage:h,serverHooks:w}=c,v="/api/setup/route";function A(){return(0,u.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:h})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[263,23,972],()=>r(11565));module.exports=a})();